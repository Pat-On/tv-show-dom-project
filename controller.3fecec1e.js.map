{"mappings":"qIAKO,IAAMA,EAAQ,CACjBC,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,OAAQ,CACJC,MAAO,GACPC,QAAS,IAEbC,UAAW,CACPF,MAAO,GACPG,SAAU,KAKLC,EAAiB,WAAA,MAAAC,KAAAC,mBAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,mBAAAK,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEPC,MAAM,4CAFC,KAAA,EAAA,OAEnBN,EAFmBG,EAAAI,KAAAJ,EAAAE,KAAA,EAGNL,EAAIQ,OAHE,KAAA,EAAA,GAGnBP,EAHmBE,EAAAI,KAIzBE,QAAQC,IAAIT,GACZhB,EAAMC,SAAWe,EAAKU,KAAI,SAAAC,GAAI,OAAIA,KAClCH,QAAQC,IAAIzB,EAAMC,UAEbc,EAAIa,GARgB,CAAAV,EAAAE,KAAA,GAAA,MAAA,MAQN,IAAIS,MAAJ,iCAAAC,OAA2Cf,EAAIgB,SARzC,KAAA,GAAA,OAAAb,EAAAc,OAAA,SASlBhB,GATkB,KAAA,GAAA,MAAAE,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,MAAA,GAAAA,EAAAe,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAf,EAAAgB,UAAApB,EAAA,KAAA,CAAA,CAAA,EAAA,wLAAH,OAAA,WAAA,OAAAH,EAAAwB,MAAAC,KAAAC,YAAA,uSCuBf,iLAzCMC,SAASC,cAAc,4DAExC,SAAOvB,GAEHoB,KAAKI,MAAQC,MAAMC,QAAQ1B,GAAQA,EAAO,CAACA,GAE3CQ,QAAQC,IAAIT,GACZ,IAAM2B,EAASP,KAAKQ,kBAEpBR,KAAKS,SACLT,KAAKU,eAAeC,mBAAmB,aAAcJ,oCAGzD,SAAkBK,GACdC,OAAOC,iBAAiB,QAAQ,SAAUC,GACtCA,EAAEC,iBACFJ,sCAIR,WACI,IAAML,EAAS,GAWf,OAViBP,KAAKI,MACba,SAAQ,SAAA1B,GACbgB,EAAOW,KAAP,oFAAAxB,OAEsBH,EAAK4B,KAF3B,QAAAzB,OAEsCH,EAAK6B,OAAOC,WAAWC,SAAS,EAAG,GAFzE,KAAA5B,OAE+EH,EAAKgC,OAAOF,WAAWC,SAAS,EAAG,GAFlH,iDAAA5B,OAG4BH,EAAKiC,MAAMC,OAHvC,2CAAA/B,OAIkBH,EAAKmC,QAJvB,0CAAAhC,OAK0BH,EAAKoC,IAL/B,6DAQGpB,wBAIX,WACIP,KAAKU,eAAekB,UAAY;MCoBzB,iLAvDM1B,SAASC,cAAc,2DAKxC,WAGI,OAFcH,KAAKU,eAAeP,cAAc,kBAAkB0B,sCAKtE,SAAiBjB,GACbxB,QAAQC,IAAIW,KAAKU,gBACjBV,KAAKU,eAAeI,iBAAiB,SAAS,SAAUC,GACpDA,EAAEC,iBACFJ,kCAGR,WACIZ,KAAKU,eAAeP,cAAc,kBAAkB0B,MAAQ,yBAGhE,WACI7B,KAAKU,eAAekB,UAAY,6UCAzB,gPAvBM1B,SAASC,cAAc,uEAExC,SAAO2B,EAAUC,GACb/B,KAAKgC,gBAAkBF,EACvB9B,KAAKiC,aAAeF,EACpB,IAAMxB,EAASP,KAAKQ,kBAEpBR,KAAKS,SACLT,KAAKU,eAAeC,mBAAmB,aAAcJ,kCAIzD,WAEI,MAAA,cAAAb,OAAqBM,KAAKgC,gBAAgBE,OAA1C,KAAAxC,OAAoDM,KAAKiC,aAAaC,8BAI1E,WACIlC,KAAKU,eAAekB,UAAY,6UCsBzB,iLA3CM1B,SAASC,cAAc,gEAExC,SAAOvB,GACHoB,KAAKI,MAAQxB,EACb,IAAM2B,EAASP,KAAKQ,kBAEpBR,KAAKS,SACLT,KAAKU,eAAeC,mBAAmB,aAAcJ,oCAGzD,SAAkBK,GACdZ,KAAKU,eAAeI,iBAAiB,UAAU,SAAUC,GACrDA,EAAEC,iBACFJ,+BAIR,WAGI,OAFeZ,KAAKU,eAAemB,qCAMvC,WACI,IAAMtB,EAAS,CAAA,2FASf,OAJiBP,KAAKI,MACba,SAAQ,SAAA1B,GACbgB,EAAOW,KAAP,kBAAAxB,OAA8BH,EAAK4C,GAAnC,MAAAzC,OAA0CH,EAAK6B,OAAOC,WAAWC,SAAS,EAAG,GAA7E,KAAA5B,OAAmFH,EAAKgC,OAAOF,WAAWC,SAAS,EAAG,GAAtH,OAAA5B,OAA8HH,EAAK4B,KAAnI,iBAEGZ,wBAIX,WACIP,KAAKU,eAAekB,UAAY,kKCnCxCQ,EAAaC,OAAOC,EAAYzE,UAEhC,IAAM0E,EAAyB,WAAA,MAAAhE,KAAAC,mBAAAC,MAAG,SAAAC,IAAA,OAAAF,mBAAAK,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGpBwD,IAHoB,KAAA,EAM1BC,EAAqBJ,OAAOC,EAAYzE,SAAUyE,EAAYzE,UAC9DuE,EAAaC,OAAOC,EAAYzE,UAChC6E,EAAgBL,OAAOC,EAAYzE,UARTiB,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAe,GAAAf,EAAA,MAAA,GAU1BM,QAAQuD,MAAR7D,EAAAe,IAV0B,KAAA,GAAA,IAAA,MAAA,OAAAf,EAAAgB,UAAApB,EAAA,KAAA,CAAA,CAAA,EAAA,uLAAH,OAAA,WAAA,OAAAH,EAAAwB,MAAAC,KAAAC,YAAA,GAczB2C,EAAyB,WAC3B,IAAM1E,EAAQwE,EAAgBG,WAE9B,GAAc,IAAV3E,EAAa,OAAOkE,EAAaC,OAAOC,EAAYzE,UACxDuB,QAAQC,IAAInB,GLyCmB,SAAUG,GACzCT,EAAMQ,UAAUC,SAAWA,EAC3B,IAAMO,EAAOhB,EAAMC,SAEnBD,EAAMQ,UAAUC,SAAWO,EAAKkE,MAAK,SAAAvD,GAAI,OAAIA,EAAK4C,KAAO9D,KK5CzD0E,CAA0B7E,GAC1BkB,QAAQC,IAAIiD,EAAYlE,UAAUC,UAClC+D,EAAaC,OAAOC,EAAYlE,UAAUC,WAKxC2E,EAAsB,WAExB,IAAM9E,EAAQ+E,EAAWJ,WAEzB,GAAc,KAAV3E,EAAc,OAAOkE,EAAaC,OAAOC,EAAYzE,UAEzDuB,QAAQC,IAAInB,GACPA,KLcoB,SAAUA,GACnCN,EAAMK,OAAOC,MAAQA,EACrB,IAAMU,EAAOhB,EAAMC,SAEnBD,EAAMK,OAAOE,QAAUS,EAAKsE,QAAO,SAAApF,GAC/B,GAAIA,EAAQ4D,QAAQyB,cAAcC,SAASlF,EAAMiF,gBAC1CrF,EAAQqD,KAAKgC,cAAcC,SAASlF,EAAMiF,eAC7C,OAAOrF,KAEfsB,QAAQC,IAAIzB,EAAMK,OAAOE,SKtBzBkF,CAAoBnF,GAGpBkE,EAAaC,OAAOC,EAAYrE,OAAOE,SAEvCsE,EAAqBJ,OAAOC,EAAYrE,OAAOE,QAASmE,EAAYzE,UACpEyE,EAAYrE,OAAOE,QAAU,KAU7B8E,EAAWK,iBAAiBN,GAI5BT,IAEAG,EAAgBa,kBAAkBX","sources":["./model.js","./views/episodesView.js","./views/searchView.js","./views/numberOfEpisodesView.js","./views/selectInputView.js","./controller.js"],"sourcesContent":["import { getOneShow, getAllShows } from \"./fakeApi/shows.js\"\r\n\r\n//importing fake episodes\r\nimport { getOneEpisode, getAllEpisodes } from \"./fakeApi/episodes.js\"\r\n\r\nexport const state = {\r\n    episodes: [],\r\n    episode: {},\r\n    shows: [],\r\n    show: {},\r\n    search: {\r\n        query: '',\r\n        results: [],\r\n    },\r\n    selection: {\r\n        query: \"\",\r\n        selected: {},\r\n    },\r\n};\r\n\r\n//import from the real API\r\nexport const importAllEpisodes = async function () {\r\n    try {\r\n        const res = await fetch(\"https://api.tvmaze.com/shows/82/episodes\")\r\n        const data = await res.json()\r\n        console.log(data) //it is working\r\n        state.episodes = data.map(item => item)\r\n        console.log(state.episodes)\r\n\r\n        if (!res.ok) throw new Error(`I'm coming from importAllShows${res.status}`)\r\n        return data\r\n\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n};\r\n\r\n\r\n//importing Shows and Episodes base on \"fake API\"\r\n// const importAllShows = function () {\r\n//     state.shows = getAllShows();\r\n// };\r\n\r\n// const ImportOneShow = function () {\r\n//     state.show = getOneShow();\r\n// };\r\n\r\n// const importAllEpisodes = function () {\r\n//     state.episodes = getAllEpisodes();\r\n// };\r\n\r\n// const ImportOneEpisode = function () {\r\n//     state.episode = getOneEpisode();\r\n// };\r\n\r\n\r\nexport const searchResults = function (query) {\r\n    state.search.query = query;\r\n    const data = state.episodes;\r\n\r\n    state.search.results = data.filter(episode => {\r\n        if (episode.summary.toLowerCase().includes(query.toLowerCase())\r\n            || episode.name.toLowerCase().includes(query.toLowerCase()))\r\n            return episode;\r\n    })\r\n    console.log(state.search.results)\r\n}\r\n\r\nexport const findSelectedEpisode = function (selected) {\r\n    state.selection.selected = selected;\r\n    const data = state.episodes;\r\n\r\n    state.selection.selected = data.find(item => item.id === selected)\r\n}\r\n\r\n\r\n\r\n// const init = function () {\r\n//     importAllShows();\r\n//     ImportOneShow();\r\n//     importAllEpisodes();\r\n//     ImportOneEpisode(); \r\n// }\r\n\r\n// init();","\r\nclass EpisodesView {\r\n    _data;\r\n    _parentElement = document.querySelector(\".container\");\r\n\r\n    render(data) {\r\n        // temporary solution -> if data is not array put it inside the array! \r\n        this._data = Array.isArray(data) ? data : [data];\r\n        // this._data = data;\r\n        console.log(data)\r\n        const markup = this._generateMarkup();\r\n\r\n        this._clear();\r\n        this._parentElement.insertAdjacentHTML('afterbegin', markup)\r\n    }\r\n\r\n    addHandlerEpisode(handler) {\r\n        window.addEventListener('load', function (e) {\r\n            e.preventDefault();\r\n            handler();\r\n        })\r\n    }\r\n\r\n    _generateMarkup() {\r\n        const markup = [];\r\n        const episodes = this._data;\r\n        episodes.forEach(item => {\r\n            markup.push(`\r\n                        <div class=\"episode\">\r\n                            <h2>${item.name} - S${item.season.toString().padStart(2, 0)}E${item.number.toString().padStart(2, 0)}</h2>\r\n                            <img src=\"${item.image.medium}\" alt=\"\">\r\n                            ${item.summary}\r\n                            <a href=${item.url}>Check the source</a>\r\n                        </div>`)\r\n        })\r\n        return markup;\r\n    };\r\n\r\n\r\n    _clear() {\r\n        this._parentElement.innerHTML = \"\";\r\n    }\r\n};\r\n\r\nexport default new EpisodesView();","\r\n\r\n//!IMPORTANT HOW TO DO ONE MORE SEARCH ON EMPTY\r\nclass SearchView {\r\n    _data;\r\n    _parentElement = document.querySelector(\".search\");\r\n\r\n\r\n    // I need to make this part of code work:\r\n    // getting query from\r\n    getQuery() {\r\n        const query = this._parentElement.querySelector('.search__field').value;\r\n        // this._clearInput();\r\n        return query;\r\n    }\r\n    //publisher\r\n    addHandlerSearch(handler) {\r\n        console.log(this._parentElement)\r\n        this._parentElement.addEventListener('input', function (e) {\r\n            e.preventDefault();\r\n            handler();\r\n        });\r\n    }\r\n    _clearInput() {\r\n        this._parentElement.querySelector('.search__field').value = '';\r\n    }\r\n\r\n    _clear() {\r\n        this._parentElement.innerHTML = \"\";\r\n    }\r\n\r\n\r\n    // render(data) {\r\n    //     this._data = data;\r\n    //     const markup = this._generateMarkup();\r\n\r\n    //     this._clear();\r\n    //     this._parentElement.insertAdjacentHTML('afterbegin', markup)\r\n\r\n    // }\r\n\r\n    // _generateMarkup() {\r\n    //     const markup = [];\r\n    //     const episodes = this._data;\r\n    //     episodes.forEach(item => {\r\n    //         markup.push(`\r\n    //                     <div class=\"episode\">\r\n    //                         <h2>${item.name} - S${item.season.toString().padStart(2, 0)}E${item.number.toString().padStart(2, 0)}</h2>\r\n    //                         <img src=\"${item.image.medium}\" alt=\"\">\r\n    //                         ${item.summary}\r\n    //                         <a href=${item.url}>Check the source</a>\r\n    //                     </div>`)\r\n    //     })\r\n    //     return markup;\r\n    // };\r\n\r\n\r\n\r\n};\r\n\r\nexport default new SearchView();","\r\nclass NumberOfEpisodesView {\r\n    _searchedNumber;\r\n    _totalNumber;\r\n    _data;\r\n    _parentElement = document.querySelector(\".number__of__episodes\");\r\n\r\n    render(searched, total) {\r\n        this._searchedNumber = searched;\r\n        this._totalNumber = total;\r\n        const markup = this._generateMarkup();\r\n\r\n        this._clear();\r\n        this._parentElement.insertAdjacentHTML('afterbegin', markup)\r\n\r\n    }\r\n\r\n    _generateMarkup() {\r\n        // console.log(searched)\r\n        return `Displaying ${this._searchedNumber.length}/${this._totalNumber.length}`;\r\n    };\r\n\r\n\r\n    _clear() {\r\n        this._parentElement.innerHTML = \"\";\r\n    }\r\n};\r\n\r\nexport default new NumberOfEpisodesView();","\r\nclass SelectInputView {\r\n    _data;\r\n    _parentElement = document.querySelector(\".select__input\");\r\n\r\n    render(data) {\r\n        this._data = data;\r\n        const markup = this._generateMarkup();\r\n\r\n        this._clear();\r\n        this._parentElement.insertAdjacentHTML('afterbegin', markup)\r\n    };\r\n\r\n    addHandlerEpisode(handler) {\r\n        this._parentElement.addEventListener('change', function (e) {\r\n            e.preventDefault();\r\n            handler();\r\n        })\r\n    }\r\n\r\n    getQuery() {\r\n        const query = +this._parentElement.value;\r\n        // this._clearInput();\r\n        return query;\r\n    }\r\n\r\n\r\n    _generateMarkup() {\r\n        const markup = [`\r\n        <option value=\"0\" selected> \r\n          Select all episodes\r\n      </option> `\r\n        ];\r\n        const episodes = this._data;\r\n        episodes.forEach(item => {\r\n            markup.push(`<option value=\"${item.id}\">${item.season.toString().padStart(2, 0)}E${item.number.toString().padStart(2, 0)} - ${item.name}</option>`)\r\n        })\r\n        return markup;\r\n    };\r\n\r\n\r\n    _clear() {\r\n        this._parentElement.innerHTML = \"\";\r\n    }\r\n};\r\n\r\nexport default new SelectInputView();","import * as model from './model.js';\r\nimport episodeViews from \"./views/episodesView.js\";\r\nimport searchView from \"./views/searchView.js\";\r\nimport numberOfEpisodesView from './views/numberOfEpisodesView.js';\r\nimport selectInputView from './views/selectInputView.js'\r\n\r\n\r\nepisodeViews.render(model.state.episodes);\r\n\r\nconst controlLoadingPageDefault = async function () {\r\n    try {\r\n        //importing all episodes from API\r\n        await model.importAllEpisodes();\r\n\r\n\r\n        numberOfEpisodesView.render(model.state.episodes, model.state.episodes)\r\n        episodeViews.render(model.state.episodes);\r\n        selectInputView.render(model.state.episodes);\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nconst controlSelectedResults = function () {\r\n    const query = selectInputView.getQuery();\r\n    // console.log(model.state.episodes)\r\n    if (query === 0) return episodeViews.render(model.state.episodes);\r\n    console.log(query)\r\n    model.findSelectedEpisode(query);\r\n    console.log(model.state.selection.selected);\r\n    episodeViews.render(model.state.selection.selected);\r\n\r\n}\r\n\r\n\r\nconst controlSearchResult = function () {\r\n    // 1 search query\r\n    const query = searchView.getQuery();\r\n\r\n    if (query === \"\") return episodeViews.render(model.state.episodes); \r\n\r\n    console.log(query)\r\n    if (!query) return;\r\n    model.searchResults(query)\r\n\r\n    //2 search and rendering search results\r\n    episodeViews.render(model.state.search.results)\r\n    // console.log(model.state.search.results)\r\n    numberOfEpisodesView.render(model.state.search.results, model.state.episodes)\r\n    model.state.search.results = []\r\n\r\n}\r\n\r\n// selectInputView.render(model.state.episodes);\r\n\r\n\r\nconst init = function () {\r\n    // there is need to reconsider the way how to join each part of the code\r\n    //because the page is loading two times from search results and window load event\r\n    searchView.addHandlerSearch(controlSearchResult);\r\n\r\n    // episodeViews.addHandlerEpisode(controlLoadingPageDefault);\r\n\r\n    controlLoadingPageDefault();\r\n\r\n    selectInputView.addHandlerEpisode(controlSelectedResults);\r\n};\r\n\r\ninit();"],"names":["state","episodes","episode","shows","show","search","query","results","selection","selected","importAllEpisodes","_ref","regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","json","console","log","map","item","ok","Error","concat","status","abrupt","t0","stop","apply","this","arguments","document","querySelector","_data","Array","isArray","markup","_generateMarkup","_clear","_parentElement","insertAdjacentHTML","handler","window","addEventListener","e","preventDefault","forEach","push","name","season","toString","padStart","number","image","medium","summary","url","innerHTML","value","searched","total","_searchedNumber","_totalNumber","length","id","$e338d5282774d3170d951555943d$export$default","render","$ff940768be80224588be92220bdd45$export$state","controlLoadingPageDefault","$ff940768be80224588be92220bdd45$export$importAllEpisodes","$ae982dae56befebf15204a7ef846a53$export$default","$edd158d2ee982403240a61ba33091a53$export$default","error","controlSelectedResults","getQuery","find","$ff940768be80224588be92220bdd45$export$findSelectedEpisode","controlSearchResult","$fba3b092469abd4dba4b3468$export$default","filter","toLowerCase","includes","$ff940768be80224588be92220bdd45$export$searchResults","addHandlerSearch","addHandlerEpisode"],"version":3,"file":"controller.3fecec1e.js.map"}